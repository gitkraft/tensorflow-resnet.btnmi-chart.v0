apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      release: "{{ .Release.Name }}"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
{{- if or .Values.podAnnotations .Values.metrics.enabled }}
      annotations:
  {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
  {{- if .Values.metrics.podAnnotations }}
{{ toYaml .Values.metrics.podAnnotations | indent 8 }}
  {{- end }}
{{- end }}
    spec:
      {{- if .Values.server.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.server.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      initContainers:
      - name: seed
        image: "{{ template "tensorflow-resnet.client.image" . }}"
        imagePullPolicy: {{ .Values.client.image.pullPolicy | quote }}
        command:
          - "/bin/sh"
          - "-c"
          - |
            if [ -f /seed/.initialized ];then
              echo "Already initialized. Skipping"
            else
              curl -o /seed/resnet_v2_fp32_savedmodel_NHWC_jpg.tar.gz http://download.tensorflow.org/models/official/20181001_resnet/savedmodels/resnet_v2_fp32_savedmodel_NHWC_jpg.tar.gz
              cd /seed/ && tar -xzf resnet_v2_fp32_savedmodel_NHWC_jpg.tar.gz --strip-components=2
              rm resnet_v2_fp32_savedmodel_NHWC_jpg.tar.gz
              touch /seed/.initialized
            fi
        volumeMounts:
        - name: seed
          mountPath: /seed
      containers:
      - name: serving
        image: "{{ template "tensorflow-resnet.server.image" . }}"
        imagePullPolicy: {{ .Values.server.image.pullPolicy | quote }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.server.port }}
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: {{ .Values.server.port }}
          initialDelaySeconds: 30
          timeoutSeconds: 5
          failureThreshold: 6
        env:
        - name: TENSORFLOW_SERVING_MODEL_NAME
          value: "resnet"
        volumeMounts:
        - name: seed
          mountPath: "/bitnami/model-data"
{{- if .Values.metrics.enabled }}
      - name: metrics
        image: {{ template "metrics.image" . }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        command: ['python', 'tf_serving_exporter.py', '--tf_port', '{{ .Values.server.port }}', '--port', '9118', '--model_name', 'resnet']
        ports:
        - name: metrics
          containerPort: 9118
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
  {{ toYaml .Values.metrics.resources | indent 10 }}
{{- end }}
      volumes:
      - name: seed
        emptyDir: {}
